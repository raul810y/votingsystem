<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                template="/WEB-INF/templates/main-template-forge.xhtml">
    <ui:define name="head">
        <script type="text/javascript" src="./TestUtils.js"></script>
    </ui:define>
    <ui:define name="content">
        <div style="width: 1000px; margin: 30px auto;">
            <button onclick="createPKCS7MessageTimeStamped()">TIMESTAMPED MESSAGE</button>
            <button onclick="createPKCS7Message()">MESSAGE WITHOUT TIMESTAMP</button>
            <button onclick="createPKCS7MessageSession()">MESSAGE SIGNED WITH SESSION KEYS</button>
            <div id="result" style="font-size: 1.2em; font-weight: bold;"></div>
        </div>
        <script>
            //<![CDATA[
            vs.setMainPageCaption("PKCS7 signature test");

            function createPKCS7MessageTimeStamped() {
                var certPrivateKeyPair = test.createSelfSignedCert();
                console.log("cert:", certPrivateKeyPair.cert)
                var contentToSign = "Signed and TimeStamped message"
                vs.getTimeStampToken(contentToSign, function (timeStampTokenASN1) {
                    console.log("timeStampTokenASN1:", timeStampTokenASN1)
                    var cmsSignedMessage =  test.createCMSSignedMessage(certPrivateKeyPair, contentToSign, timeStampTokenASN1)
                    console.log("timeStamped CMSSignedMessage:", cmsSignedMessage)
                    var pem = forge.pkcs7.messageToPem(cmsSignedMessage);
                    console.log("timeStamped CMSSignedMessage PEM:", pem)
                    var p7 = forge.pkcs7.messageFromPem(pem);
                    console.log(p7)
                });
            }

            function createPKCS7MessageSession() {
                var messageDto = {operation:{type:"CLOSE_SESSION"}, uuid:vs.getUUID()};
                vs.rsaUtil.sign(JSON.stringify(messageDto), function(cmsSignedMessage) {
                    console.log("message signed with session keys:", cmsSignedMessage)
                });
            }

            function createPKCS7Message() {
                var certPrivateKeyPair = test.createSelfSignedCert();
                var cmsSignedMessage =  test.createCMSSignedMessage(certPrivateKeyPair, 'Some content to be signed.')
                var pem = forge.pkcs7.messageToPem(cmsSignedMessage);
                console.log("CMSSignedMessage - pem:", pem)

                var cmsSignedMessage = forge.pkcs7.messageFromPem(pem);
                console.log("CMSSignedMessage FROM PEM:", cmsSignedMessage)
            }
            // ]]>
        </script>
    </ui:define>
</ui:composition>