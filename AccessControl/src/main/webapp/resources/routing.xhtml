<html>
<script src="./bower_components/visionmedia-page/page.js"></script>
<script>
  window.addEventListener('WebComponentsReady', function() {

      function scrollToTop(ctx, next) {
          vs.scrollPageToTop();
          next();
      }

      var iframeVS
      function loadFrameVS(url, pageCaption) {
          Polymer.Base.importHref('./resources/bower_components/vs-iframe/vs-iframe.html', function(e) {
              if(!iframeVS) iframeVS = document.createElement('vs-iframe');
              iframeVS.url = url
              vs.loadMainContent(iframeVS, pageCaption)
          });
      }

      // Routes
      page('*/app/contact', scrollToTop, function (ctx) {
          vs.route = 'contact';
          loadFrameVS(contextURL + "/app/contact.xhtml", "${msg.contactLbl}")
      });

      page('*/app/tools', scrollToTop, function (ctx) {
          vs.route = 'tools';
          if(vs.webextension_available === true) VotingSystemClient.setMessage(new OperationVS(Operation.TOOL_VS))
          else loadFrameVS(contextURL + "/app/tools.xhtml", "${msg.toolsPageTitle}")
      });

      page('/resources/certificationCenters', scrollToTop, function (ctx) {
          loadFrameVS(contextURL + "/resources/certificationCenters.html")
      });

      var eventElectionList
      page('*/eventElection', scrollToTop, function (ctx) {
          vs.route = 'eventElection';
          Polymer.Base.importHref('./eventElection/eventvs-election-list.vsp', function () {
              if (!eventElectionList) eventElectionList = document.createElement('eventvs-election-list');
              eventElectionList.loadURL(ctx.path, ctx.querystring)
              vs.loadMainContent(eventElectionList, "${msg.electionSystemLbl}")
          });
      });

      var eventElection
      page('/rest/eventElection/id*', scrollToTop, function (ctx) {
          vs.route = 'eventElection';
          Polymer.Base.importHref('./eventElection/eventvs-election.vsp', function () {
              if (!eventElection) eventElection = document.createElement('eventvs-election');
              if(vs.eventvs) eventElection.eventvs = vs.eventvs
              else eventElection.url = contextURL + ctx.path
              vs.loadMainContent(eventElection, "${msg.pollLbl}")
          });
      });

      var representativePage
      page('/rest/representative/id*', scrollToTop, function (ctx) {
          vs.route = 'representative';
          Polymer.Base.importHref('./representative/representative-info.vsp', function () {
              if (!representativePage) representativePage = document.createElement('representative-info');
              if(vs.representative) representativePage.representative = vs.representative
              else representativePage.url = contextURL + ctx.path
              vs.loadMainContent(representativePage, "${msg.representativeLbl}")
          });
      });

      var representativeEditor
      page('/representative/edit', scrollToTop, function (ctx) {
          vs.route = 'edit_representative';
          Polymer.Base.importHref('./representative/representative-editor.vsp', function () {
              if (!representativeEditor) representativeEditor = document.createElement('representative-editor');
              vs.loadMainContent(representativeEditor, "${msg.newRepresentativeLbl}")
          });
      });

      var eventvsEditor
      page('/publish_election', scrollToTop, function (ctx) {
          vs.route = 'publish_election';
          Polymer.Base.importHref('./eventElection/eventvs-editor.vsp', function () {
              if (!eventvsEditor) eventvsEditor = document.createElement('eventvs-editor');
              vs.loadMainContent(eventvsEditor, "${msg.publishVoteLbl}")
          });
      });

      var representativeList
      page('*/representative', scrollToTop, function (ctx) {
          vs.route = 'representative';
          Polymer.Base.importHref('./representative/representative-list.vsp', function () {
              if (!representativeList) representativeList = document.createElement('representative-list');
              vs.loadMainContent(representativeList, "${msg.representativesPageLbl}")
          });
      });

      page('*/subscriptionVS/feeds', scrollToTop, function (ctx) {
          vs.route = 'feeds';
          loadFrameVS(contextURL + "/subscriptionVS/feeds.xhtml", "${msg.subscriptionLbl}")
      });

      page({
          hashbang: true // add #! before urls
      });

      if(!vs.route) page("/eventElection")
  })
</script>
</html>