<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:o="http://omnifaces.org/ui"
                template="/WEB-INF/templates/main-template.xhtml">
  <ui:define name="head">
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <link href="#{request.contextPath}/res/gtl/vendors/google-code-prettify/bin/prettify.min.css" rel="stylesheet"/>
  </ui:define>
  <f:metadata>
    <f:viewAction action="#{publishElection.onload}" />
  </f:metadata>
  <ui:define name="content">
    <div style="margin: 30px auto;">
      <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
          <div class="x_panel">
            <div class="row x_title">
              <div class="col-md-12" style="display: flex; flex-direction: row; align-items: center;">
                <div style="margin: 0 50px 0 0; font-size:1.1em;font-weight: bold; color: #43c2cb;">#{msg.dateLbl}: #{publishElection.electionDate}</div>
                <div style="text-transform:capitalize;font-weight:bold;text-align:center;font-size:1.6em">
                  #{publishElection.electionSubject}
                </div>
              </div>
            </div>
            <div class="x_content" style="display: block;">
              <div style="min-height:250px;display: block;">
                <div style="font-size: 1.2em;">
                  <h:outputText value="#{publishElection.electionContent}" escape="false"/>
                </div>
                <div class="ln_solid"></div>
                <div>
                  <div style="font-size: 1.2em;font-weight: bold;margin: 0 10px 0 0;">
                    #{msg.electionOptionsLbl}:
                  </div>
                  <div>
                    <ul id="electionOptions"></ul>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div id="qrImgDiv" style="margin: 0 auto; text-align: center; ">
        <div style="font-size: 1.8em;color: #3a8287;">#{publishElection.getQrId()}</div>
        <img id="qrImg" src="#{publishElection.getQRCodeURL()}"/>
      </div>

      <div id="submitButtonDiv" style="display: flex; flex-direction: row;justify-content: flex-end;">
        <h:link value="#{msg.cancelLbl}" class="btn btn-success" outcome="editor"/>
      </div>
    </div>

    <o:socket channel="serviceUpdated" user="#{publishElection.qrUUID}" onmessage="serviceUpdated" scope="view"/>

    <div id="publishResultDialog" class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-hidden="true">
      <div class="modal-dialog modal-sm">
        <div class="modal-content" style="text-align: center; padding: 15px;">
          <h3 class="modal-title" style="font-size: 1.4em;font-weight: bold;">#{msg.operationOkMsg}</h3>
          <div id="publishResultDialogMessage" style="font-size: 1.2em;"></div>
          <div style="margin: 15px 0 0 0;display: flex; flex-direction: row;justify-content: flex-end;">
            <a href="#{request.contextPath}/election/election.xhtml?UUID=#{publishElection.electionUUID}" type="button"
               class="btn btn-primary">#{msg.acceptLbl}</a>
          </div>
        </div>
      </div>
    </div>

    <script>
      //<![CDATA[
      vs.setMainPageCaption("#{msg.readQRCodeMsg}");

      function serviceUpdated(updateMessage) {
          console.log("updateMessage: " + updateMessage)
          var responseDto = JSON.parse(updateMessage);
          if(200 == responseDto.statusCode) {
              document.querySelector("#submitButtonDiv").style.display = 'none';
              document.querySelector("#qrImgDiv").style.display = 'none';
              document.querySelector("#publishResultDialogMessage").innerHTML = responseDto.message;
              $("#publishResultDialog").modal({backdrop: 'static', keyboard: false})
          } else {
              vs.alert("#{msg.operationErrorMsg}", responseDto.message)
          }
      }

      console.log("qrCodeURL: #{publishElection.getQRCodeURL()}")

      if("" === "#{publishElection.electionDate}") {
        console.log("election data not found redirection to editor")
        window.location.href = "#{request.contextPath}/publish-election/editor.xhtml"
      }

      String.prototype.format = function() {
        var args = arguments;
        var str =  this.replace(/''/g, "'")
        return str.replace(/{(\d+)}/g, function(match, number) {
          return typeof args[number] != 'undefined' ? args[number] : match;
        });
      };
      var optionTemplate = '<li style="margin: 5px 0 0 0; font-size:1.5em;color: #43c2cb;">{0}</li>'

      var electionOptionsSeparator = "#@#@#@";
      $(document).ready(function() {
        var electionOptions = "#{publishElection.electionOptions}".split(electionOptionsSeparator);
        for (var i = 0; i < electionOptions.length; i++) {
          var option = optionTemplate.format(electionOptions[i])
          document.querySelector("#electionOptions").innerHTML = document.querySelector("#electionOptions").innerHTML + option;
        }
      })
      // ]]>
    </script>
  </ui:define>
</ui:composition>