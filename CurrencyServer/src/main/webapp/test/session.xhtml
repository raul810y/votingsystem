<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                template="/WEB-INF/templates/polymer.xhtml">
    <ui:define name="head">
        <style> </style>
    </ui:define>
    <ui:define name="content">
        <div style="text-align: center;margin: 10px;"><a href="http://undertow.io/blog/2015/03/26/HTTP2-In-Wildfly.html">Wildfly  HTTP/2</a></div>
        <div><b>document.cookie:</b><div id="documentCookie"></div></div>
        <div><b>Session ID:</b><div id="sessionDiv"></div></div>

        <div id="qrCodeImgDiv" class="vertical layout center center-justified">
            <div style="margin: 25px 0 0 0;font-size: 1.2em;"><b>${msg.accessLbl}</b></div>
            <img id="qrImg"  src="" alt="read it with your mobile"/>
            <div id="websocketSessionDiv"></div>
        </div>

        <script>
            //<![CDATA[
                var qrCodesMap = {}
                var wsSessionId, wsDeviceId

                var INIT_REMOTE_SIGNED_BROWSER_SESSION = 0;
                var QR_MESSAGE_INFO                    = 1;

                var WEB_SOCKET_SESSION_KEY = "ws_sid";
                var DEVICE_ID_KEY          = "d_id";
                var OPERATION_KEY          = "op";
                var OPERATION_ID_KEY       = "op_id";

                function getQRCodeURL(operation, operationId, deviceId, sessionId) {
                    var result = "${contextURL}/qr?cht=qr&chs=100x100&chl="
                    if(operation != null) result = result + OPERATION_KEY + "=" + operation + ";"
                    if(operationId != null) result = result + OPERATION_ID_KEY + "=" + operationId + ";"
                    if(deviceId != null) result = result + DEVICE_ID_KEY + "=" + deviceId + ";"
                    if(sessionId != null) result = result + WEB_SOCKET_SESSION_KEY + "=" + sessionId + ";"
                    return result;
                }

                //var socketServiceURL = "ws://currency:8080/CurrencyServer/websocket/service"
                var socketServiceURL = "wss://currency:8443/CurrencyServer/websocket/service"
                var JSESSIONID =  getCookie("JSESSIONID")

                document.addEventListener('WebComponentsReady', function() {
                    console.log("polymer.xhtml - WebComponentsReady")
                });

                document.querySelector("#documentCookie").innerHTML=document.cookie;
                document.querySelector("#sessionDiv").innerHTML = JSESSIONID

                function getCookie(name) {
                    var value = "; " + document.cookie;
                    var parts = value.split("; " + name + "=");
                    if (parts.length == 2) result = parts.pop().split(";").shift();
                    return result.split(".")[0];
                }

                var websocket
                if ('WebSocket' in window) {
                    websocket = new WebSocket(socketServiceURL);
                } else {
                    alert('WebSocket is not supported by this browser.');
                }
                websocket.onopen = function () {
                    console.log('Info: WebSocket connection opened.');
                };
                websocket.onmessage = function (event) {
                    console.log('Received: ' + event.data);
                    var messageJSON = toJSON(event.data)
                    if("MESSAGEVS_FROM_VS" ===  messageJSON.operation) {
                        messageJSON.operation = messageJSON.messageType
                        switch(messageJSON.operation) {
                            case "INIT_SESSION":
                                wsSessionId = messageJSON.sessionId
                                websocket.send(JSON.stringify({"operation":"INIT_BROWSER_SESSION"}))
                                break;
                            case "INIT_BROWSER_SESSION":
                                if(ResponseVS.SC_OK == messageJSON.statusCode) {
                                    wsDeviceId = messageJSON.deviceId
                                    var opCode = Math.random().toString(36).substring(2, 6);
                                    qrCodesMap[opCode] = { "operation":"QR_MESSAGE_INFO_RESPONSE",
                                        "messageType":"INIT_REMOTE_SIGNED_BROWSER_SESSION",
                                        "sessionId": wsSessionId, "deviceId":wsDeviceId}
                                    document.querySelector("#qrImg").setAttribute("src", getQRCodeURL(QR_MESSAGE_INFO, opCode, wsDeviceId, null))
                                    //document.querySelector("#websocketSessionDiv").innerHTML = messageJSON.sessionId.substring(0, 4);
                                    document.querySelector("#websocketSessionDiv").innerHTML = opCode;
                                }
                                break;
                        }

                    } else {
                        switch(messageJSON.operation) {
                            case "QR_MESSAGE_INFO":
                                var qrOperation = qrCodesMap[messageJSON.message]
                                switch(qrOperation.operation) {
                                    case "INIT_REMOTE_SIGNED_BROWSER_SESSION":
                                        break;
                                }
                                break;
                        }
                    }
                };
                websocket.onclose = function (event) {
                    console.log('Info: WebSocket connection closed, Code: ' + event.code + (event.reason == "" ? "" : ", Reason: " + event.reason));
                };
            //]]>
        </script>
    </ui:define>
</ui:composition>
